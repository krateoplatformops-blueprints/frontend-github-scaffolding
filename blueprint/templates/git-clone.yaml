{{- $group := .Values.global.compositionGroup }}
{{- $version := .Values.global.compositionInstalledVersion }}
{{- $kind := .Values.global.compositionKind }}
{{- $namespace := .Values.global.compositionNamespace }}
{{- $name := .Values.global.compositionName }}
{{- $gv := printf "%s/%s" $group $version }}
{{- $cr := lookup $gv $kind $namespace $name }}
apiVersion: git.krateo.io/v1alpha1
kind: Repo
metadata:
  name: {{ .Release.Name }}-repo
  labels:
    {{- include "frontend-github-scaffolding.labels" . | nindent 4 }}
  annotations:
    {{- if $cr }}
      {{- $annotations := $cr.metadata.annotations | default dict }}
      {{- if or (not (hasKey $annotations "krateo.io/paused")) (ne (index $annotations "krateo.io/paused") "true") }}
    krateo.io/paused: "true"
      {{- else }}
    krateo.io/paused: "false"
      {{- end }}
    {{- end }}
spec:
  unsupportedCapabilities: {{ .Values.git.unsupportedCapabilities }}
  insecure: {{ .Values.git.insecure }}
  configMapKeyRef:
    namespace: {{ .Release.Namespace }}
    name: {{ .Release.Name }}-replace-values
    key: values
  fromRepo:
    url: {{ include "frontend-github-scaffolding.fromRepoUrl" . }}
    branch: {{ .Values.git.fromRepo.branch }}
    authMethod: {{ .Values.git.fromRepo.credentials.authMethod }}
    path: {{ .Values.git.fromRepo.path }}
    secretRef:
      namespace: {{ .Values.git.fromRepo.credentials.secretRef.namespace }}
      name: {{ .Values.git.fromRepo.credentials.secretRef.name }}
      key: {{ .Values.git.fromRepo.credentials.secretRef.key }}
  toRepo:
    url: {{ include "frontend-github-scaffolding.toRepoUrl" . }}
    branch: {{ .Values.git.toRepo.branch }}
    authMethod: {{ .Values.git.toRepo.credentials.authMethod }}
    path: {{ .Values.git.toRepo.path }}
    secretRef:
      namespace: {{ .Values.git.toRepo.credentials.secretRef.namespace }}
      name: {{ .Values.git.toRepo.credentials.secretRef.name }}
      key: {{ .Values.git.toRepo.credentials.secretRef.key }}